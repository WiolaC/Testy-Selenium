// Generated by Selenium IDE
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import org.junit.experimental.theories.suppliers.TestedOn;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;


public class TestySelenium {

    private WebDriver driver;
    /*łącznik miedzy java a firefox*/
   //tag before oznacza ze metoda setup wykona sie przed testem
    @Before
    public void setUp() {
        WebDriverManager.firefoxdriver().setup();
        driver = new FirefoxDriver();
       /*private i before trzeba zawsze napisać na początku, ZAPAMIETAC
       nie ma znaczenia czy najpierw w kodzie napiszemy before czy after*/
    }
    //Tak after oznacza ze wykona sie po tescie
    @After
    public void tearDown() {
        driver.quit();
        /*teardown nie przyjmuje zadnych wartosci Quit ma za zadanie wyjsc z przegladarki
        taka metoda powinna zawsze wyć na koncu testu, nie potrzebna jest
        otwarta przeglądarka ZAPAMIETAC*/
    }

    @Ignore //jesli damy ten tag to Java ignoruje ten test
    @Test
    public void dodanieTekstuDoInitial() throws InterruptedException {
        //metoda get otwiera strone internetową,
        //w nawiasie w stringach podajemy strone internetowa
        driver.get("http://executeautomation.com/demosite/index.html");

        //chcemy stworzyc element, przeniesc go do kodu
        // webelement- typ dla elementu na stronie
        //łączymy go z id by?? co id, name po czym chcemy wyszukac
        // diver(udowstepnia metody z selenium) i mowimy ktory element (find element)
        // do wyszukiwania elementow służy metoda findelement
        WebElement initial= driver.findElement(By.id("Initial"));

        //metoda do wrowadzania tekstu do elementu
        //metoda sendkeys wstawia elementy do textboxa
        Thread.sleep(3000);
        initial.sendKeys("Test");
        //czeka 3s w wylaczeniem przegladarki
        Thread.sleep(3000);

    }
    @Ignore
    @Test
    public void wstawImieiNazwisko() throws InterruptedException {
        driver.get("http://executeautomation.com/demosite/index.html");
        //1 wstaw tekst do First Name
        WebElement imie= driver.findElement(By.id("FirstName"));
        Thread.sleep(3000);
        imie.sendKeys("Tomasz");
        Thread.sleep(3000);
        //2 wstaw tekst do Middle Name
        WebElement nazwisko= driver.findElement(By.id("MiddleName"));
        Thread.sleep(3000);
        nazwisko.sendKeys("Gie");
        Thread.sleep(3000);

    }
@Ignore
    @Test
    public void zaznaczCheckBox() throws InterruptedException {
        driver.get("http://executeautomation.com/demosite/index.html");
        //odznacz chechboxkbox english
        WebElement CheckBoxEnglish= driver.findElement(By.name("english"));
        Thread.sleep(3000);
        CheckBoxEnglish.click();
        Thread.sleep(3000);
        //zaznacz checkbox hindi
        WebElement CheckBoxHindi= driver.findElement(By.name("Hindi"));
        Thread.sleep(3000);
        CheckBoxHindi.click();
        Thread.sleep(3000);

    }
@Ignore
    @Test
    public void logowanieDoStrony () throws InterruptedException {
        driver.get("http://newtours.demoaut.com/index.php");
        WebElement imie= driver.findElement(By.name("userName"));
        Thread.sleep(3000);
        imie.sendKeys("Tomasz");
        Thread.sleep(3000);
        WebElement password= driver.findElement(By.name("password"));
        password.sendKeys("password");
        Thread.sleep(3000);
        WebElement SingIn= driver.findElement(By.name("login"));
        SingIn.click();
        Thread.sleep(3000);

    }
@Ignore
    @Test
    public void dropDown() throws InterruptedException {
        //dropdown- rozwija liste
        // dropdown= select
        driver.get("http://executeautomation.com/demosite/index.html");
        //połączenie selenium do selecta na stronie internetowej, select jest zamiast Webelement
        Select dropdown= new Select(driver.findElement(By.id("TitleId")));
        //wybieramy konkretny tekst z naszego selecta
        //dropdown.selectByVisibleText("Mr.");
        //wybieramy tekst za moca numeru index
        //dropdown.selectByIndex(2);
        dropdown.selectByValue("1");
        Thread.sleep(3000);}

        @Ignore
        @Test
                public void wielokrotnyWybor() throws InterruptedException {
        driver.get("http://output.jsbin.com/osebed/2");
        //stworzyc element selecta
            Select owoce=new Select(driver.findElement(By.id("fruits")));
            //wybrac cos po value
            //owoce.selectByValue("apple");
            Thread.sleep(3000);
            //wybrac cos po visible text
            owoce.selectByVisibleText("Orange");
            Thread.sleep(3000);


        }
@Ignore
        @Test
    public void link() throws InterruptedException {
        driver.get("http://executeautomation.com/demosite/index.html");
        //znalezlismy element ktory jest podlinkown, jest to jedno slowo
        WebElement link= driver.findElement(By.linkText("HtmlPopup"));
        //kliknelismy w ten element
        link.click();
        Thread.sleep(3000);
        }


        @Ignore
        @Test
    public void partialLink() throws InterruptedException {
        driver.get("http://newtours.demoaut.com/index.php");
        //tworzymy elemet partial link (poczatek koniec lub srodek SIGN)
        WebElement partialLink= driver.findElement(By.partialLinkText("SIGN"));
        partialLink.click();
            Thread.sleep(3000);
        }

@Ignore
@Test
    public void alertAccepted() throws InterruptedException {
        driver.get("http://executeautomation.com/demosite/index.html");
        //musimy stworzyc element dla buttona Generate
    WebElement buttonGenerate= driver.findElement(By.name("generate"));
    //klikamy na button
    buttonGenerate.click();
    Thread.sleep(3000);
//musimy sie przelaczyc na alert
    Alert alertElement=driver.switchTo().alert();
    //chcemy kliknac ok
    alertElement.accept();
    Thread.sleep(3000);
    alertElement.accept();
    Thread.sleep(3000);

}
@Ignore
    @Test
    public void alertDismiss() throws InterruptedException {
        driver.get("http://executeautomation.com/demosite/index.html");
        //musimy stworzyc element dla buttona Generate
        WebElement buttonGenerate= driver.findElement(By.name("generate"));
        //klikamy na button
        buttonGenerate.click();
        Thread.sleep(3000);
//musimy sie przelaczyc na alert
        Alert alertElement=driver.switchTo().alert();
        //chcemy kliknac ok
        alertElement.dismiss();
        Thread.sleep(3000);
        alertElement.dismiss();
        Thread.sleep(3000);

    }
@Ignore
    @Test
    public void radioButton() throws InterruptedException {
        driver.get("http://demo.guru99.com/test/radio.html");
        //stworzmy 3 elementy (radiobuttony)
        WebElement radio1=driver.findElement(By.id("vfb-7-1"));
        WebElement radio2=driver.findElement(By.id("vfb-7-2"));
        WebElement radio3=driver.findElement(By.id("vfb-7-3"));
        radio3.click();
        Thread.sleep(3000);
        radio2.click();
        Thread.sleep(3000);

    }
    @Test
    public void wyczyscOkno() throws InterruptedException {
        driver.get("http://executeautomation.com/demosite/index.html");
        //stworz dwa elementydla Initial i FirstName
        WebElement Initial= driver.findElement(By.id("Initial"));
        WebElement firstName=driver.findElement(By.id("FirstName"));
        //wstaw tekst fo tych elementow
        Initial.sendKeys("Test");
        firstName.sendKeys("Test");
        Thread.sleep(3000);
        //Wyczysc te dwa textboxy METODA CLEAR
        Initial.clear();
        firstName.clear();
        Thread.sleep(3000);




    }

    }





